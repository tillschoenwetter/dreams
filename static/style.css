html, body {
  margin: 0;
  padding: 0;
/*  color: #ddd; */
  width: 100%;
  height: 100%;
  font-family: sans-serif;
}

* {
  cursor: default;
}

/* Override for specific interactive elements */
button, 
.similar-panel-header,
.node,
.link {
  cursor: pointer;
}

/* Only show text cursor for inputs and textareas */
input[type="text"],
textarea {
  cursor: text;
}

#star-canvas {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: -1; /* puts it behind everything else */
  display: block;
  pointer-events: none;
  background: black; /* fallback in case canvas fails */
  user-select: none;  /* Prevent text selection */
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  outline: none;  /* Remove focus outline */
  cursor: default !important;
}

.input-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100vh;
}
.input-container img {
  max-width: 200px;
  margin-bottom: 30px;
  animation: glowPulse 5s ease-in-out infinite;
}
.dream-box {
  background: rgba(0, 0, 0, 0.8);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 25px;
  padding: 20px;
  box-shadow: 0 0 25px rgba(255, 255, 255, 0.08),
              0 0 50px rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(4px);
  transition: box-shadow 0.3s ease;
  width: 80vw;      /* 80% of the screen width */
  max-width: 900px;
}

.dream-box:hover {
  box-shadow: 0 0 35px rgba(255, 255, 255, 0.15),
              0 0 60px rgba(255, 255, 255, 0.1);
}

.dream-box textarea {
  width: 100%;
  height: 160px;
  background: transparent;
  border: none;
  color: #eee;
  font-family: 'Georgia', serif;
  font-size: 16px;
  line-height: 1.4;
  outline: none;
  resize: none;
}
.buttons {
  display: flex;
  justify-content: center;
  gap: 20px; /* optional: space between buttons */
  margin-top: 20px;
}

.buttons button {
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 25px;
  padding: 20px;
  font-family: 'Georgia', serif;
  box-shadow: 0 0 25px rgba(255, 255, 255, 0.08),
              0 0 50px rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(4px);
  transition: box-shadow 0.3s ease;
  max-width: 600px;
  align-items: center;
}

.buttons button:hover {
  box-shadow: 0 0 35px rgba(255, 255, 255, 0.15),
              0 0 60px rgba(255, 255, 255, 0.1);
}

button {
  margin-top: 10px;
  padding: 8px 16px;
  font-size: 16px;
  cursor: pointer;
}
.constellation-container {
  position: relative;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  cursor: default;
}
.header {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  padding: 10px;
  background: rgba(0,0,0,0.7);
  text-align: center;
  z-index: 10;
}
.header button {
  padding: 8px 16px;
  font-size: 16px;
}
/* ↓ Panel similar dreams ↓ */
.similar-panel {
  position: absolute;
  top: 50px;
  left: 20px;
  background: rgba(0,0,0,0.8);
  border: 1px solid #444;
  border-radius: 4px;
  z-index: 20;
  max-width: 300px;
  color: #ddd;
  overflow: hidden;
}
.similar-panel-header {
  /* padding: 5px 10px; */
  background: #222;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 14px;
}
.similar-panel-content {
  max-height: 150px;
  overflow-y: auto;
  padding: 5px 10px;
  font-size: 13px;
}


svg {
  width: 100vw;
  height: 100vh;
  background: #000;
}
.node { cursor: pointer; }
.link { stroke-opacity: 0.3; }
.tooltip {
  position: absolute;
  text-align: left;
  padding: 10px;
  font: 12px sans-serif;
  background: rgba(255,255,255,0.9);
  border: 1px solid #ccc;
  border-radius: 4px;
  pointer-events: none;
  box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
  color: #333;
}

.spinner-overlay {
  position: fixed;
  top: 0; left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.8);
  z-index: 999;
  display: flex;
  align-items: center;
  justify-content: center;
}

.spinner {
  border: 8px solid #222;
  border-top: 8px solid #fff;
  border-radius: 50%;
  width: 60px;
  height: 60px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0%   { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
.threshold-slider {
  position: absolute;
  top: 50px;
  right: 20px;
  background: rgba(0, 0, 0, 0.8);
  border: 1px solid #444;
  border-radius: 4px;
  padding: 10px;
  color: #ddd;
  font-size: 13px;
  z-index: 20;
}

@keyframes glowPulse {
  0% {
    filter: drop-shadow(0 0 5px rgba(255, 255, 255, 0.3));
  }
  50% {
    filter: drop-shadow(0 0 15px rgba(255, 255, 255, 0.4));
  }
  100% {
    filter: drop-shadow(0 0 5px rgba(255, 255, 255, 0.3));
  }
}




/* —————— footer —————— */
footer {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  pointer-events: none;
  cursor: default;
}

.landing-footer .horizon {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 100px;
  background: linear-gradient(to top, rgba(255, 255, 255, 0.1), transparent);
  pointer-events: none;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  cursor: default;
}


/* ————————————————— Telescope ———————————————— */
.circle-container {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 90vmin;
  height: 90vmin;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  overflow: hidden;
  background: black;
  z-index: 1;
}
/* ─── center crosshair ─── */
#centerCross {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 30px;          /* total span of the cross */
  height: 30px;
  transform: translate(-50%, -50%);
  pointer-events: none; /* let clicks/drag go “through” */
  z-index: 100;         /* above your constellation */
}

/* horizontal & vertical bar */
#centerCross::before,
#centerCross::after {
  content: "";
  position: absolute;
  background: #fff;     /* white cross; tweak as you like */
}

/* horizontal line */
#centerCross::before {
  top: 50%;
  left: 0;
  width: 100%;
  height: 1px;          /* thickness */
  transform: translateY(-50%);
}

/* vertical line */
#centerCross::after {
  left: 50%;
  top: 0;
  width: 1px;           /* thickness */
  height: 100%;
  transform: translateX(-50%);
}
/* ───── */

#centerPreview {
  position: absolute;
  bottom: 30px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 10;

  max-width: 70vw;
  padding: 10px 14px;
  border-radius: 12px;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  font: 13px/1.4 "Helvetica Neue", Arial, sans-serif;
  text-align: center;
  width: 30%;
  /* hidden by default */
  display: none;
  pointer-events: none;  /* so clicks pass through */
}

/* helper class you toggle from JS */
#centerPreview.shown {
  display: block;
  /* optional: fade-in animation */
  animation: fadeIn 1s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translate(-50%, 10px); }
  to   { opacity: 1; transform: translate(-50%, 0); }
}

/* .similar-panel-TS {
  /* z-index: 10; 
} */

 /*──────────────────────── HUD dream Preview ────────────────────────*/
/* HUD che appare in basso al centro dello schermo */
#centerPreview{
  position: absolute;
  bottom: 30px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0,0,0,.70);
  color: #fff;
  padding: 8px 12px;
  border-radius: 10px;
  max-width: 30vw;       /* ← era 70vw  (più stretta) */
  text-align: center;
  font: 13px/1.4 "Helvetica Neue", Arial, sans-serif;
  pointer-events: none;
  z-index: 1000;
  display: none;
}



 /*──────────────────────── Full dream modal ────────────────────────*/
#dreamModal{
  position: fixed;                 /* ↳ stays put on screen          */
  top: 50%; left: 50%;
  transform: translate(-50%, -50%);
  max-width: 70vw; max-height: 40vh;
  padding: 20px;
  overflow: auto;

  background: rgba(0,0,0,0.85);
  color: #fff;
  font: 14px/1.45 "Helvetica Neue", Arial, sans-serif;
  border-radius: 14px;
  box-shadow: 0 0 40px rgba(0,0,0,.55);
  display: none;                   /* hidden by default              */
  z-index: 2000;                   /* above everything else          */
  pointer-events: all;             /* accept clicks (for close btn)  */
}
